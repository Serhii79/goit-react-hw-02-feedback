{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","styles","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","handleClick","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+QAYeA,EATS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKC,UAAU,qBAAf,SACKF,EAAQG,KAAI,SAACC,GAAD,OACT,wBAAQF,UAAWG,IAAOC,OAAQC,KAAK,SAAsBC,QAAS,kBAAMP,EAAgBG,IAA5F,SAAsGA,GAAjDA,SCMlDK,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,sBAAKZ,UAAU,uBAAf,UACI,uCAAS,+BAAOQ,OAChB,0CAAY,+BAAOC,OACnB,sCAAQ,+BAAOC,OACf,wCAAU,+BAAOC,OACjB,oDAAsB,+BAAOC,IAA7B,WCJFC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCAEE,oBAAIf,UAAU,QAAd,SAAuBc,IAEtBC,MAKCC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,kCACE,4BAAIA,OAyDOC,E,4MApDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,YAAc,SAAClB,GACb,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAASoB,EAAUpB,GAAU,O,EAIlCqB,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAIzBc,gCAAkC,WAAO,IAC/BhB,EAAS,EAAKW,MAAdX,KACFG,EAAQ,EAAKY,qBAEnB,OAAOZ,EAAQc,KAAKC,MAAc,IAAPlB,EAAcG,GAAS,G,4CAGpD,WACE,OACE,gCAEE,cAAC,EAAD,CAASG,MAAM,wBAAf,SACE,cAAC,EAAD,CACEhB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4B,KAAKP,gBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACiC,IAA9Ba,KAAKJ,qBACJ,cAAC,EAAD,CACAf,KAAMmB,KAAKR,MAAMX,KACjBC,QAASkB,KAAKR,MAAMV,QACpBC,IAAKiB,KAAKR,MAAMT,IAChBC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,oCAEtB,cAAC,EAAD,CAAcP,QAAQ,+B,GA7CnBW,IAAMC,WCfxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.3bd85155.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n    <div className=\"Feedback__controls\">\r\n        {options.map((option) => (\r\n            <button className={styles.button} type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>{option}</button>\r\n\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\n// const FeedbackOptions = ({ onGood, onNeutral, onBad }) => (\r\n//     <div className=\"Feedback__controls\">\r\n//         <h2 className=\"title\">Please leave feedback</h2>\r\n//         <button type=\"button\" onClick={onGood}>Good</button>\r\n//         <button type=\"button\" onClick={onNeutral}>Neutral</button>\r\n//         <button type=\"button\" onClick={onBad}>Bad</button>\r\n//     </div>\r\n// );","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div className=\"Statistics__counters\">\r\n        <p>Good: <span>{good}</span></p>\r\n        <p>Neutral: <span>{neutral}</span></p>\r\n        <p>Bad: <span>{bad}</span></p>\r\n        <p>Total: <span>{total}</span></p>\r\n        <p>Positive feedback: <span>{positivePercentage}</span>%</p>\r\n    </div>\r\n);\r\n\r\nexport default Statistics;\r\n\r\n// const Statistics = ({ data: { good, neutral, bad } }) => {\r\n//     const total = good + neutral + bad;\r\n//     const positivePercentage =  total !== 0 ? Math.round((good * 100) / total) : 0;\r\n//     return (\r\n//         <div className=\"Statistics__counters\">\r\n//             <h2 className=\"title\">Statistics</h2>\r\n//             <p>Good: <span>{good}</span></p>\r\n//             <p>Neutral: <span>{neutral}</span></p>\r\n//             <p>Bad: <span>{bad}</span></p>\r\n//             <p>Total: <span>{total}</span></p>\r\n//             <p>Positive feedback: <span>{positivePercentage}</span>%</p>\r\n//         </div>\r\n//     )\r\n// };","import React from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nconst Section = ({ title, children }) => (\n  <section>\n\n    <h2 className=\"title\">{title}</h2>\n\n    {children}\n\n  </section>\n)\n\nconst Notification = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n)\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleClick = (option) => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    return total ? Math.round((good * 100) / total) : 0;\n  };\n\n  render() {\n    return (\n      <div>\n\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (<Notification message=\"No feedback given\"></Notification>)}\n        </Section>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n  // handleGood = () => {\n  //   this.setState(prevState => ({\n  //     good: prevState.good + 1,\n  //   }));\n  //  };\n\n  // handleNeutral = () => {\n  //   this.setState(prevState => ({\n  //     neutral: prevState.neutral + 1,\n  //   }));\n  // };\n\n  // handleBad = () => {\n  //   this.setState(prevState => ({\n  //     bad: prevState.bad + 1,\n  //   }));\n  // };\n\n  // ------теж саме без деструктуризації -------\n  // countTotalFeedback = () => {\n  //   return this.state.good + this.state.neutral + this.state.bad;\n  // };\n\n        {/* <FeedbackOptions\n          onGood={this.handleGood}\n          onNeutral={this.handleNeutral}\n          onBad={this.handleBad}\n        /> */}\n        \n        {/* <Statistics\n          data={this.state}\n        /> */}\n\n        {/* <p>Total: <span>{this.countTotalFeedback()}</span></p> */}\n        {/* <p>Positive feedback: <span>{this.countPositiveFeedbackPercentage()}</span>%</p> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__-8M0J\"};"],"sourceRoot":""}