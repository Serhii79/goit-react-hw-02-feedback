{"version":3,"sources":["components/FeedbackOptions.jsx","components/Statistics.jsx","App.js","index.js"],"names":["FeedbackOptions","onGood","onNeutral","onBad","className","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleGood","setState","prevState","handleNeutral","handleBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wPAsBeA,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACpB,sBAAKC,UAAU,qBAAf,UACI,oBAAIA,UAAU,QAAd,mCAEA,wBAAQC,KAAK,SAASC,QAASL,EAA/B,kBACA,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,qBACA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBCJOI,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,sBAAKR,UAAU,uBAAf,UACI,oBAAIA,UAAU,QAAd,wBAEA,uCAAS,+BAAOI,OAChB,0CAAY,+BAAOC,OACnB,sCAAQ,+BAAOC,OACf,wCAAU,+BAAOC,OACjB,oDAAsB,+BAAOC,IAA7B,WCwEOC,E,4MA7EbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAWPK,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,KAAMS,EAAUT,KAAO,O,EAI3BU,cAAgB,WACd,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BR,QAASQ,EAAUR,QAAU,O,EAIjCU,UAAY,WACV,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BP,IAAKO,EAAUP,IAAM,O,EAIzBU,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAQzBW,gCAAkC,WAAO,IAC/Bb,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKS,qBAEnB,OAAiB,IAAVT,EAAcW,KAAKC,MAAc,IAAPf,EAAcG,GAAS,G,4CAG1D,WACE,OACE,sBAAKP,UAAU,WAAf,UAME,cAAC,EAAD,CACEH,OAAQuB,KAAKT,WACbb,UAAWsB,KAAKN,cAChBf,MAAOqB,KAAKL,YAGd,cAAC,EAAD,CACEX,KAAMgB,KAAKV,MAAMN,KACjBC,QAASe,KAAKV,MAAML,QACpBC,IAAKc,KAAKV,MAAMJ,IAChBC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,2C,GApEjBI,IAAMC,WCCxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b11e6a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const FeedbackOptions = ({ onFeedback }) => (\r\n//     <div className=\"Feedback__controls\">\r\n//         <h2 className=\"title\">Please leave feedback</h2>\r\n\r\n//         <button type=\"button\" onClick={onFeedback.key}>Good</button>\r\n//         <button type=\"button\" onClick={onFeedback.key}>Neutral</button>\r\n//         <button type=\"button\" onClick={onFeedback.key}>Bad</button>\r\n//     </div>\r\n// );\r\n\r\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => (\r\n    <div className=\"Feedback__controls\">\r\n        <h2 className=\"title\">Please leave feedback</h2>\r\n\r\n        <button type=\"button\" onClick={onGood}>Good</button>\r\n        <button type=\"button\" onClick={onNeutral}>Neutral</button>\r\n        <button type=\"button\" onClick={onBad}>Bad</button>\r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <div className=\"Statistics__counters\">\r\n        <h2 className=\"title\">Statistics</h2>\r\n        \r\n        <p>Good: <span>{good}</span></p>\r\n        <p>Neutral: <span>{neutral}</span></p>\r\n        <p>Bad: <span>{bad}</span></p>\r\n        <p>Total: <span>{total}</span></p>\r\n        <p>Positive feedback: <span>{positivePercentage}</span>%</p>\r\n    </div>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  // handleStates = () => {\n  //   for (key in this.state) {\n  //     this.setState(prevState => ({\n  //       key: prevState.key + 1,\n  //     }));\n  //   };\n  // };\n    \n  handleGood = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n   };\n\n  handleNeutral = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  handleBad = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  // ------теж саме без деструктуризації -------\n  // countTotalFeedback = () => {\n  //   return this.state.good + this.state.neutral + this.state.bad;\n  // }; \n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n\n    return total !== 0 ? Math.round((good * 100) / total) : 0;\n  };\n\n  render() {\n    return (\n      <div className=\"Feedback\">\n\n        {/* <FeedbackOptions\n          onFeedback={this.handleStates()}\n        /> */}\n\n        <FeedbackOptions\n          onGood={this.handleGood}\n          onNeutral={this.handleNeutral}\n          onBad={this.handleBad}\n        />\n\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n\n        {/* <p>Total: <span>{this.countTotalFeedback()}</span></p> */}\n        {/* <p>Positive feedback: <span>{this.countPositiveFeedbackPercentage()}</span>%</p> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}